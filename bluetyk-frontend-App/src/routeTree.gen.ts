/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TestRouteImport } from './routes/test'
import { Route as LoginRouteImport } from './routes/login'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as IndexRouteImport } from './routes/index'
import { Route as UsersUserLayoutRouteImport } from './routes/users/user-layout'
import { Route as SmslogSmslogLayoutRouteImport } from './routes/smslog/smslog-layout'
import { Route as ShiftShiftLayoutRouteImport } from './routes/shift/shift-layout'
import { Route as MembersViewMembersRouteImport } from './routes/members/view-members'
import { Route as MembersMemberLayoutRouteImport } from './routes/members/member-layout'
import { Route as MembersAddMembersRouteImport } from './routes/members/add-members'
import { Route as MembersMemberIdRouteImport } from './routes/members/$memberId'
import { Route as LocationLocationLayoutRouteImport } from './routes/location/location-layout'
import { Route as HolidaysHolidayLayoutRouteImport } from './routes/holidays/holiday-layout'
import { Route as DeviceViewDeviceRouteImport } from './routes/device/view-device'
import { Route as DeviceDeviceLayoutRouteImport } from './routes/device/device-layout'
import { Route as DeviceAddDeviceRouteImport } from './routes/device/add-device'
import { Route as DeviceDeviceIdRouteImport } from './routes/device/$deviceId'
import { Route as DepartmentDepartmentLayoutRouteImport } from './routes/department/department-layout'
import { Route as AttendanceViewAttendenceRouteImport } from './routes/attendance/view-attendence'
import { Route as AttendanceTodaysAttendanceRouteImport } from './routes/attendance/todays-attendance'
import { Route as AttendanceAttendanceLayoutRouteImport } from './routes/attendance/attendance-layout'
import { Route as MembersMemberEditMemberIdRouteImport } from './routes/members/memberEdit/$memberId'
import { Route as DeviceDeviceEditDeviceIdRouteImport } from './routes/device/deviceEdit/$deviceId'

const TestRoute = TestRouteImport.update({
  id: '/test',
  path: '/test',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const UsersUserLayoutRoute = UsersUserLayoutRouteImport.update({
  id: '/users/user-layout',
  path: '/users/user-layout',
  getParentRoute: () => rootRouteImport,
} as any)
const SmslogSmslogLayoutRoute = SmslogSmslogLayoutRouteImport.update({
  id: '/smslog/smslog-layout',
  path: '/smslog/smslog-layout',
  getParentRoute: () => rootRouteImport,
} as any)
const ShiftShiftLayoutRoute = ShiftShiftLayoutRouteImport.update({
  id: '/shift/shift-layout',
  path: '/shift/shift-layout',
  getParentRoute: () => rootRouteImport,
} as any)
const MembersViewMembersRoute = MembersViewMembersRouteImport.update({
  id: '/members/view-members',
  path: '/members/view-members',
  getParentRoute: () => rootRouteImport,
} as any)
const MembersMemberLayoutRoute = MembersMemberLayoutRouteImport.update({
  id: '/members/member-layout',
  path: '/members/member-layout',
  getParentRoute: () => rootRouteImport,
} as any)
const MembersAddMembersRoute = MembersAddMembersRouteImport.update({
  id: '/members/add-members',
  path: '/members/add-members',
  getParentRoute: () => rootRouteImport,
} as any)
const MembersMemberIdRoute = MembersMemberIdRouteImport.update({
  id: '/members/$memberId',
  path: '/members/$memberId',
  getParentRoute: () => rootRouteImport,
} as any)
const LocationLocationLayoutRoute = LocationLocationLayoutRouteImport.update({
  id: '/location/location-layout',
  path: '/location/location-layout',
  getParentRoute: () => rootRouteImport,
} as any)
const HolidaysHolidayLayoutRoute = HolidaysHolidayLayoutRouteImport.update({
  id: '/holidays/holiday-layout',
  path: '/holidays/holiday-layout',
  getParentRoute: () => rootRouteImport,
} as any)
const DeviceViewDeviceRoute = DeviceViewDeviceRouteImport.update({
  id: '/device/view-device',
  path: '/device/view-device',
  getParentRoute: () => rootRouteImport,
} as any)
const DeviceDeviceLayoutRoute = DeviceDeviceLayoutRouteImport.update({
  id: '/device/device-layout',
  path: '/device/device-layout',
  getParentRoute: () => rootRouteImport,
} as any)
const DeviceAddDeviceRoute = DeviceAddDeviceRouteImport.update({
  id: '/device/add-device',
  path: '/device/add-device',
  getParentRoute: () => rootRouteImport,
} as any)
const DeviceDeviceIdRoute = DeviceDeviceIdRouteImport.update({
  id: '/device/$deviceId',
  path: '/device/$deviceId',
  getParentRoute: () => rootRouteImport,
} as any)
const DepartmentDepartmentLayoutRoute =
  DepartmentDepartmentLayoutRouteImport.update({
    id: '/department/department-layout',
    path: '/department/department-layout',
    getParentRoute: () => rootRouteImport,
  } as any)
const AttendanceViewAttendenceRoute =
  AttendanceViewAttendenceRouteImport.update({
    id: '/attendance/view-attendence',
    path: '/attendance/view-attendence',
    getParentRoute: () => rootRouteImport,
  } as any)
const AttendanceTodaysAttendanceRoute =
  AttendanceTodaysAttendanceRouteImport.update({
    id: '/attendance/todays-attendance',
    path: '/attendance/todays-attendance',
    getParentRoute: () => rootRouteImport,
  } as any)
const AttendanceAttendanceLayoutRoute =
  AttendanceAttendanceLayoutRouteImport.update({
    id: '/attendance/attendance-layout',
    path: '/attendance/attendance-layout',
    getParentRoute: () => rootRouteImport,
  } as any)
const MembersMemberEditMemberIdRoute =
  MembersMemberEditMemberIdRouteImport.update({
    id: '/members/memberEdit/$memberId',
    path: '/members/memberEdit/$memberId',
    getParentRoute: () => rootRouteImport,
  } as any)
const DeviceDeviceEditDeviceIdRoute =
  DeviceDeviceEditDeviceIdRouteImport.update({
    id: '/device/deviceEdit/$deviceId',
    path: '/device/deviceEdit/$deviceId',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/test': typeof TestRoute
  '/attendance/attendance-layout': typeof AttendanceAttendanceLayoutRoute
  '/attendance/todays-attendance': typeof AttendanceTodaysAttendanceRoute
  '/attendance/view-attendence': typeof AttendanceViewAttendenceRoute
  '/department/department-layout': typeof DepartmentDepartmentLayoutRoute
  '/device/$deviceId': typeof DeviceDeviceIdRoute
  '/device/add-device': typeof DeviceAddDeviceRoute
  '/device/device-layout': typeof DeviceDeviceLayoutRoute
  '/device/view-device': typeof DeviceViewDeviceRoute
  '/holidays/holiday-layout': typeof HolidaysHolidayLayoutRoute
  '/location/location-layout': typeof LocationLocationLayoutRoute
  '/members/$memberId': typeof MembersMemberIdRoute
  '/members/add-members': typeof MembersAddMembersRoute
  '/members/member-layout': typeof MembersMemberLayoutRoute
  '/members/view-members': typeof MembersViewMembersRoute
  '/shift/shift-layout': typeof ShiftShiftLayoutRoute
  '/smslog/smslog-layout': typeof SmslogSmslogLayoutRoute
  '/users/user-layout': typeof UsersUserLayoutRoute
  '/device/deviceEdit/$deviceId': typeof DeviceDeviceEditDeviceIdRoute
  '/members/memberEdit/$memberId': typeof MembersMemberEditMemberIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/test': typeof TestRoute
  '/attendance/attendance-layout': typeof AttendanceAttendanceLayoutRoute
  '/attendance/todays-attendance': typeof AttendanceTodaysAttendanceRoute
  '/attendance/view-attendence': typeof AttendanceViewAttendenceRoute
  '/department/department-layout': typeof DepartmentDepartmentLayoutRoute
  '/device/$deviceId': typeof DeviceDeviceIdRoute
  '/device/add-device': typeof DeviceAddDeviceRoute
  '/device/device-layout': typeof DeviceDeviceLayoutRoute
  '/device/view-device': typeof DeviceViewDeviceRoute
  '/holidays/holiday-layout': typeof HolidaysHolidayLayoutRoute
  '/location/location-layout': typeof LocationLocationLayoutRoute
  '/members/$memberId': typeof MembersMemberIdRoute
  '/members/add-members': typeof MembersAddMembersRoute
  '/members/member-layout': typeof MembersMemberLayoutRoute
  '/members/view-members': typeof MembersViewMembersRoute
  '/shift/shift-layout': typeof ShiftShiftLayoutRoute
  '/smslog/smslog-layout': typeof SmslogSmslogLayoutRoute
  '/users/user-layout': typeof UsersUserLayoutRoute
  '/device/deviceEdit/$deviceId': typeof DeviceDeviceEditDeviceIdRoute
  '/members/memberEdit/$memberId': typeof MembersMemberEditMemberIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/test': typeof TestRoute
  '/attendance/attendance-layout': typeof AttendanceAttendanceLayoutRoute
  '/attendance/todays-attendance': typeof AttendanceTodaysAttendanceRoute
  '/attendance/view-attendence': typeof AttendanceViewAttendenceRoute
  '/department/department-layout': typeof DepartmentDepartmentLayoutRoute
  '/device/$deviceId': typeof DeviceDeviceIdRoute
  '/device/add-device': typeof DeviceAddDeviceRoute
  '/device/device-layout': typeof DeviceDeviceLayoutRoute
  '/device/view-device': typeof DeviceViewDeviceRoute
  '/holidays/holiday-layout': typeof HolidaysHolidayLayoutRoute
  '/location/location-layout': typeof LocationLocationLayoutRoute
  '/members/$memberId': typeof MembersMemberIdRoute
  '/members/add-members': typeof MembersAddMembersRoute
  '/members/member-layout': typeof MembersMemberLayoutRoute
  '/members/view-members': typeof MembersViewMembersRoute
  '/shift/shift-layout': typeof ShiftShiftLayoutRoute
  '/smslog/smslog-layout': typeof SmslogSmslogLayoutRoute
  '/users/user-layout': typeof UsersUserLayoutRoute
  '/device/deviceEdit/$deviceId': typeof DeviceDeviceEditDeviceIdRoute
  '/members/memberEdit/$memberId': typeof MembersMemberEditMemberIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/login'
    | '/test'
    | '/attendance/attendance-layout'
    | '/attendance/todays-attendance'
    | '/attendance/view-attendence'
    | '/department/department-layout'
    | '/device/$deviceId'
    | '/device/add-device'
    | '/device/device-layout'
    | '/device/view-device'
    | '/holidays/holiday-layout'
    | '/location/location-layout'
    | '/members/$memberId'
    | '/members/add-members'
    | '/members/member-layout'
    | '/members/view-members'
    | '/shift/shift-layout'
    | '/smslog/smslog-layout'
    | '/users/user-layout'
    | '/device/deviceEdit/$deviceId'
    | '/members/memberEdit/$memberId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/login'
    | '/test'
    | '/attendance/attendance-layout'
    | '/attendance/todays-attendance'
    | '/attendance/view-attendence'
    | '/department/department-layout'
    | '/device/$deviceId'
    | '/device/add-device'
    | '/device/device-layout'
    | '/device/view-device'
    | '/holidays/holiday-layout'
    | '/location/location-layout'
    | '/members/$memberId'
    | '/members/add-members'
    | '/members/member-layout'
    | '/members/view-members'
    | '/shift/shift-layout'
    | '/smslog/smslog-layout'
    | '/users/user-layout'
    | '/device/deviceEdit/$deviceId'
    | '/members/memberEdit/$memberId'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/login'
    | '/test'
    | '/attendance/attendance-layout'
    | '/attendance/todays-attendance'
    | '/attendance/view-attendence'
    | '/department/department-layout'
    | '/device/$deviceId'
    | '/device/add-device'
    | '/device/device-layout'
    | '/device/view-device'
    | '/holidays/holiday-layout'
    | '/location/location-layout'
    | '/members/$memberId'
    | '/members/add-members'
    | '/members/member-layout'
    | '/members/view-members'
    | '/shift/shift-layout'
    | '/smslog/smslog-layout'
    | '/users/user-layout'
    | '/device/deviceEdit/$deviceId'
    | '/members/memberEdit/$memberId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRoute
  LoginRoute: typeof LoginRoute
  TestRoute: typeof TestRoute
  AttendanceAttendanceLayoutRoute: typeof AttendanceAttendanceLayoutRoute
  AttendanceTodaysAttendanceRoute: typeof AttendanceTodaysAttendanceRoute
  AttendanceViewAttendenceRoute: typeof AttendanceViewAttendenceRoute
  DepartmentDepartmentLayoutRoute: typeof DepartmentDepartmentLayoutRoute
  DeviceDeviceIdRoute: typeof DeviceDeviceIdRoute
  DeviceAddDeviceRoute: typeof DeviceAddDeviceRoute
  DeviceDeviceLayoutRoute: typeof DeviceDeviceLayoutRoute
  DeviceViewDeviceRoute: typeof DeviceViewDeviceRoute
  HolidaysHolidayLayoutRoute: typeof HolidaysHolidayLayoutRoute
  LocationLocationLayoutRoute: typeof LocationLocationLayoutRoute
  MembersMemberIdRoute: typeof MembersMemberIdRoute
  MembersAddMembersRoute: typeof MembersAddMembersRoute
  MembersMemberLayoutRoute: typeof MembersMemberLayoutRoute
  MembersViewMembersRoute: typeof MembersViewMembersRoute
  ShiftShiftLayoutRoute: typeof ShiftShiftLayoutRoute
  SmslogSmslogLayoutRoute: typeof SmslogSmslogLayoutRoute
  UsersUserLayoutRoute: typeof UsersUserLayoutRoute
  DeviceDeviceEditDeviceIdRoute: typeof DeviceDeviceEditDeviceIdRoute
  MembersMemberEditMemberIdRoute: typeof MembersMemberEditMemberIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/test': {
      id: '/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof TestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/users/user-layout': {
      id: '/users/user-layout'
      path: '/users/user-layout'
      fullPath: '/users/user-layout'
      preLoaderRoute: typeof UsersUserLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/smslog/smslog-layout': {
      id: '/smslog/smslog-layout'
      path: '/smslog/smslog-layout'
      fullPath: '/smslog/smslog-layout'
      preLoaderRoute: typeof SmslogSmslogLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/shift/shift-layout': {
      id: '/shift/shift-layout'
      path: '/shift/shift-layout'
      fullPath: '/shift/shift-layout'
      preLoaderRoute: typeof ShiftShiftLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/members/view-members': {
      id: '/members/view-members'
      path: '/members/view-members'
      fullPath: '/members/view-members'
      preLoaderRoute: typeof MembersViewMembersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/members/member-layout': {
      id: '/members/member-layout'
      path: '/members/member-layout'
      fullPath: '/members/member-layout'
      preLoaderRoute: typeof MembersMemberLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/members/add-members': {
      id: '/members/add-members'
      path: '/members/add-members'
      fullPath: '/members/add-members'
      preLoaderRoute: typeof MembersAddMembersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/members/$memberId': {
      id: '/members/$memberId'
      path: '/members/$memberId'
      fullPath: '/members/$memberId'
      preLoaderRoute: typeof MembersMemberIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/location/location-layout': {
      id: '/location/location-layout'
      path: '/location/location-layout'
      fullPath: '/location/location-layout'
      preLoaderRoute: typeof LocationLocationLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/holidays/holiday-layout': {
      id: '/holidays/holiday-layout'
      path: '/holidays/holiday-layout'
      fullPath: '/holidays/holiday-layout'
      preLoaderRoute: typeof HolidaysHolidayLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/device/view-device': {
      id: '/device/view-device'
      path: '/device/view-device'
      fullPath: '/device/view-device'
      preLoaderRoute: typeof DeviceViewDeviceRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/device/device-layout': {
      id: '/device/device-layout'
      path: '/device/device-layout'
      fullPath: '/device/device-layout'
      preLoaderRoute: typeof DeviceDeviceLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/device/add-device': {
      id: '/device/add-device'
      path: '/device/add-device'
      fullPath: '/device/add-device'
      preLoaderRoute: typeof DeviceAddDeviceRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/device/$deviceId': {
      id: '/device/$deviceId'
      path: '/device/$deviceId'
      fullPath: '/device/$deviceId'
      preLoaderRoute: typeof DeviceDeviceIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/department/department-layout': {
      id: '/department/department-layout'
      path: '/department/department-layout'
      fullPath: '/department/department-layout'
      preLoaderRoute: typeof DepartmentDepartmentLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/attendance/view-attendence': {
      id: '/attendance/view-attendence'
      path: '/attendance/view-attendence'
      fullPath: '/attendance/view-attendence'
      preLoaderRoute: typeof AttendanceViewAttendenceRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/attendance/todays-attendance': {
      id: '/attendance/todays-attendance'
      path: '/attendance/todays-attendance'
      fullPath: '/attendance/todays-attendance'
      preLoaderRoute: typeof AttendanceTodaysAttendanceRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/attendance/attendance-layout': {
      id: '/attendance/attendance-layout'
      path: '/attendance/attendance-layout'
      fullPath: '/attendance/attendance-layout'
      preLoaderRoute: typeof AttendanceAttendanceLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/members/memberEdit/$memberId': {
      id: '/members/memberEdit/$memberId'
      path: '/members/memberEdit/$memberId'
      fullPath: '/members/memberEdit/$memberId'
      preLoaderRoute: typeof MembersMemberEditMemberIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/device/deviceEdit/$deviceId': {
      id: '/device/deviceEdit/$deviceId'
      path: '/device/deviceEdit/$deviceId'
      fullPath: '/device/deviceEdit/$deviceId'
      preLoaderRoute: typeof DeviceDeviceEditDeviceIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRoute,
  LoginRoute: LoginRoute,
  TestRoute: TestRoute,
  AttendanceAttendanceLayoutRoute: AttendanceAttendanceLayoutRoute,
  AttendanceTodaysAttendanceRoute: AttendanceTodaysAttendanceRoute,
  AttendanceViewAttendenceRoute: AttendanceViewAttendenceRoute,
  DepartmentDepartmentLayoutRoute: DepartmentDepartmentLayoutRoute,
  DeviceDeviceIdRoute: DeviceDeviceIdRoute,
  DeviceAddDeviceRoute: DeviceAddDeviceRoute,
  DeviceDeviceLayoutRoute: DeviceDeviceLayoutRoute,
  DeviceViewDeviceRoute: DeviceViewDeviceRoute,
  HolidaysHolidayLayoutRoute: HolidaysHolidayLayoutRoute,
  LocationLocationLayoutRoute: LocationLocationLayoutRoute,
  MembersMemberIdRoute: MembersMemberIdRoute,
  MembersAddMembersRoute: MembersAddMembersRoute,
  MembersMemberLayoutRoute: MembersMemberLayoutRoute,
  MembersViewMembersRoute: MembersViewMembersRoute,
  ShiftShiftLayoutRoute: ShiftShiftLayoutRoute,
  SmslogSmslogLayoutRoute: SmslogSmslogLayoutRoute,
  UsersUserLayoutRoute: UsersUserLayoutRoute,
  DeviceDeviceEditDeviceIdRoute: DeviceDeviceEditDeviceIdRoute,
  MembersMemberEditMemberIdRoute: MembersMemberEditMemberIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
